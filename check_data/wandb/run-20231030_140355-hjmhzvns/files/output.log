[1m============================= test session starts ==============================
platform linux -- Python 3.11.6, pytest-7.4.3, pluggy-1.3.0 -- /home/prayat/miniconda3/envs/mlflow-da4e209d9e0c57fad09ef195f5244bcce3a4669e/bin/python
cachedir: .pytest_cache
rootdir: /home/prayat/Desktop/Prayat_Udacity_exercises/chapter2/Final_Pipeline_ Release_Deploy/exercise14/genre_classification/check_data
[1mcollected 4 items                                                              
test_data.py::test_column_presence_and_type [31mFAILED
test_data.py::test_class_names [32mPASSED
test_data.py::test_column_ranges [32mPASSED
test_data.py::test_kolmogorov_smirnov [32mPASSED
=================================== FAILURES ===================================
[31m[1m________________________ test_column_presence_and_type _________________________
data =        Unnamed: 0  ...                                    text_feature
0               0  ...                         ...  Euphoric Hardstyle
41974       41974  ...                         Best of Hardstyle 2020
[41975 rows x 19 columns]
    def test_column_presence_and_type(data):
        # Disregard the reference dataset
        _, data = data
        required_columns = {
            "time_signature": pd.api.types.is_integer_dtype,
            "key": pd.api.types.is_integer_dtype,
            "danceability": pd.api.types.is_float_dtype,
            "energy": pd.api.types.is_float_dtype,
            "loudness": pd.api.types.is_float_dtype,
            "speechiness": pd.api.types.is_float_dtype,
            "acousticness": pd.api.types.is_float_dtype,
            "instrumentalness": pd.api.types.is_float_dtype,
            "liveness": pd.api.types.is_float_dtype,
            "valence": pd.api.types.is_float_dtype,
            "tempo": pd.api.types.is_float_dtype,
            "duration_ms": pd.api.types.is_integer_dtype,  # This is integer, not float as one might expect
            "text_features": pd.api.types.is_string_dtype,
            "genre": pd.api.types.is_string_dtype
        }
        # Check column presence
>       assert set(data.columns.values).issuperset(set(required_columns.keys()))
[31m[1mE       AssertionError: assert False
[31m[1mE        +  where False = <built-in method issuperset of set object at 0x7f2f1af15fc0>({'acousticness', 'danceability', 'duration_ms', 'energy', 'genre', 'instrumentalness', ...})
[31m[1mE        +    where <built-in method issuperset of set object at 0x7f2f1af15fc0> = {'Unnamed: 0', 'acousticness', 'danceability', 'duration_ms', 'energy', 'genre', ...}.issuperset
[31m[1mE        +      where {'Unnamed: 0', 'acousticness', 'danceability', 'duration_ms', 'energy', 'genre', ...} = set(array(['Unnamed: 0', 'danceability', 'energy', 'key', 'loudness', 'mode',\n       'speechiness', 'acousticness', 'instrumentalness', 'liveness',\n       'valence', 'tempo', 'type', 'duration_ms', 'time_signature',\n       'genre', 'song_name', 'title', 'text_feature'], dtype=object))
[31m[1mE        +        where array(['Unnamed: 0', 'danceability', 'energy', 'key', 'loudness', 'mode',\n       'speechiness', 'acousticness', 'instrumentalness', 'liveness',\n       'valence', 'tempo', 'type', 'duration_ms', 'time_signature',\n       'genre', 'song_name', 'title', 'text_feature'], dtype=object) = Index(['Unnamed: 0', 'danceability', 'energy', 'key', 'loudness', 'mode',\n       'speechiness', 'acousticness', 'instrumentalness', 'liveness',\n       'valence', 'tempo', 'type', 'duration_ms', 'time_signature', 'genre',\n       'song_name', 'title', 'text_feature'],\n      dtype='object').values
[31m[1mE        +          where Index(['Unnamed: 0', 'danceability', 'energy', 'key', 'loudness', 'mode',\n       'speechiness', 'acousticness', 'instrumentalness', 'liveness',\n       'valence', 'tempo', 'type', 'duration_ms', 'time_signature', 'genre',\n       'song_name', 'title', 'text_feature'],\n      dtype='object') =        Unnamed: 0  ...                                    text_feature\n0               0  ...                             Mercury: Retrograde\n1               1  ...                                       Pathology\n2               2  ...                                        Symbiote\n3               3  ...   ProductOfDrugs (Prod. The Virus and Antidote)\n4               4  ...                                           Venom\n...           ...  ...                                             ...\n41970       41970  ...                             Euphoric Hardstyle \n41971       41971  ...                    Greatest Hardstyle Playlist \n41972       41972  ...                         Best of Hardstyle 2020 \n41973       41973  ...                             Euphoric Hardstyle \n41974       41974  ...                         Best of Hardstyle 2020 \n\n[41975 rows x 19 columns].columns
[31m[1mE        +    and   {'acousticness', 'danceability', 'duration_ms', 'energy', 'genre', 'instrumentalness', ...} = set(dict_keys(['time_signature', 'key', 'danceability', 'energy', 'loudness', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo', 'duration_ms', 'text_features', 'genre']))
[31m[1mE        +      where dict_keys(['time_signature', 'key', 'danceability', 'energy', 'loudness', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo', 'duration_ms', 'text_features', 'genre']) = <built-in method keys of dict object at 0x7f2f1adc7700>()
[31m[1mE        +        where <built-in method keys of dict object at 0x7f2f1adc7700> = {'acousticness': <function is_float_dtype at 0x7f2f462a9800>, 'danceability': <function is_float_dtype at 0x7f2f462a9800>, 'duration_ms': <function is_integer_dtype at 0x7f2f462a9120>, 'energy': <function is_float_dtype at 0x7f2f462a9800>, ...}.keys
[31m[1mtest_data.py[39m[22m:28: AssertionError
[33m=============================== warnings summary ===============================
../../../../../../../miniconda3/envs/mlflow-da4e209d9e0c57fad09ef195f5244bcce3a4669e/lib/python3.11/site-packages/wandb/sdk/launch/builder/build.py:11
  /home/prayat/miniconda3/envs/mlflow-da4e209d9e0c57fad09ef195f5244bcce3a4669e/lib/python3.11/site-packages/wandb/sdk/launch/builder/build.py:11: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    import pkg_resources
test_data.py::test_column_presence_and_type
  /home/prayat/Desktop/Prayat_Udacity_exercises/chapter2/Final_Pipeline_ Release_Deploy/exercise14/genre_classification/check_data/conftest.py:29: DtypeWarning: Columns (16) have mixed types. Specify dtype option on import or set low_memory=False.
    sample1 = pd.read_csv(local_path)
test_data.py::test_column_presence_and_type
  /home/prayat/Desktop/Prayat_Udacity_exercises/chapter2/Final_Pipeline_ Release_Deploy/exercise14/genre_classification/check_data/conftest.py:32: DtypeWarning: Columns (16) have mixed types. Specify dtype option on import or set low_memory=False.
    sample2 = pd.read_csv(local_path)
-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
[36m[1m=========================== short test summary info ============================
[31mFAILED[39m test_data.py::[1mtest_column_presence_and_type[22m - AssertionError: assert False
[31m=================== [1m1 failed[39m[22m, [32m3 passed[39m, [33m3 warnings[31m in 5.41s ====================